@using Infrastructure.Resources
@using Web.eBado.App_Code
@model Web.eBado.Models.Account.RegistrationModel

@{
    ViewBag.Title = "RegisterUser";
}

@Scripts.Render("~/bundles/jquery_autocomplete")
<script src='https://www.google.com/recaptcha/api.js'></script>
<script>
    function onSubmit(token) {
        document.getElementById("htmlForm").submit();
    }
</script>

@using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { id = "htmlForm" }))
{
    @Html.AntiForgeryToken()

    <div class="container push_top_30">
        <div class="col-md-2"></div>
        <div class="row">
            <div class="col-md-7">
                <div class="card">
                    @AccountHelper.RegisterMenu(Url, ViewContext.RouteData.Values["Action"].ToString())
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="basic">
                            <form>
                                <div class="col-sm-12 reg-font">@Resources.LoginInfo</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.UserModel.Email, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHEmail } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.UserModel.Email)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.UserModel.PhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessagesFor(model => model.UserModel.PhoneNumber)
                                    </label>
                                </div>

                                <div class="col-sm-12 reg-font"></div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.UserModel.Password, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPassword } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessagesFor(model => model.UserModel.Password)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.UserModel.RepeatPassword, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHRepeatPassword } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessagesFor(model => model.UserModel.RepeatPassword)
                                    </label>
                                </div>
                               
                                <button id="MyButton" class="g-recaptcha form-btn col-sm-12" data-sitekey="@System.Configuration.ConfigurationManager.AppSettings["ReCaptcha_PublicKey"]" data-callback="onSubmit">@Resources.Register2</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

   @Scripts.Render("~/bundles/postalCode")
}

