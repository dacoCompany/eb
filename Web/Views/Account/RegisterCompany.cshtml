@model Web.eBado.Models.Account.RegisterCompany
@using Infrastructure.Common.Enums
@using Infrastructure.Resources

@{
    ViewBag.Title = "RegisterCompany";
}

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.jquery.js"></script>*@
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.4.2/chosen.css">*@

@Scripts.Render("~/bundles/chosen")
@Styles.Render("~/Content/chosen")
@Styles.Render("~/Content/check-radio")
@Scripts.Render("~/bundles/jquery_autocomplete")
<script>
    $(function () {
        $("#validateBtn").click(function () {

            var btn = $("#validateBtn");
            var oldText = btn.text();
            btn.text('');
            btn.html('<span id=\"spn2\" class=\"glyphicon glyphicon-refresh glyphicon-refresh-animate\"></span>');
            var cn = $("#txtCompanyNumber").val().replace(" ", "");

            if (cn == null || cn.length < 8) {
                return;
            }

            $.ajax({
                url: "http://localhost:50198/api/SKRegister/GetCompanyDetailsById3",
                data: JSON.parse("{ \"id\": \"" + cn + "\"}"),
                dataType: "json",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                success: function (data, textStatus, jqXHR) {
                    if (jqXHR.status == "200" && data != null) {
                        $("#IcoValidation").text("");
                        $("#txtCompanyName").val(data.Name);
                        $("#txtCompanyPostalCode").val(data.PostCode != null ? data.PostCode : "");
                        if (data.CompanyType === "Živnostník") {
                            $("#AccountTypeDropDown").val('2');
                        } else {
                            $("#AccountTypeDropDown").val('3');
                        }
                        $("#companyDiv").show();
                        btn.text(oldText);
                    }
                    else {
                        $("#IcoValidation").text("Sorry! We have not found this company identifier");
                        btn.text(oldText);
                    }
                },
                error: function (response) {
                    $("#IcoValidation").text("Sorry! We have not found this company identifier");
                    btn.text(oldText);
                },
                failure: function (response) {
                    alert(response.responseText);
                    btn.text(oldText);
                }
            });
        });
    });

    $(function () {
        $("#WithoutIco").click(function () {
            $("#companyDiv").show();
            $("#AccountTypeDropDown").val('1');
        });
        $("#WithIco").click(function () {
            $("#companyDiv").hide();
        });
    });

     
</script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container push_top_30">
        <div class="col-md-2"></div>
        <div class="row">
            <div class="col-md-7">
                <div class="card">
                    @AccountHelper.RegisterMenu(Url, ViewContext.RouteData.Values["Action"].ToString())
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="basic">
                            <form>
                                <div class="col-sm-12 reg-font">@Resources.LoginInfo</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHEmail } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.PhoneNumber)
                                    </label>
                                </div>
                                <div class="col-sm-12 reg-font"></div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPassword } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Password)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.RepeatPassword, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHRepeatPassword } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.RepeatPassword)
                                    </label>
                                </div>
                                <div class="col-sm-12 reg-font">@Resources.ContactPerson</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-3">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHTitle } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Title)
                                    </label>
                                </div>
                                <div class="form-group col-sm-4">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHFirstname } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.FirstName)
                                    </label>
                                </div>
                                <div class="form-group col-sm-5">
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHLastName } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Surname)
                                    </label>
                                </div>
                                <div class="col-sm-12 reg-font">@Resources.ContactDetails</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-3">
                                    <input type="text" class="form-control txt-lg" id="txtPostalCode" placeholder="@Resources.PHPostalCode" />
                                    @Html.HiddenFor(model => model.PostalCode, new { @id = "hiddenPostalCode" })
                                    <input type="hidden" id="hfCustomer" name="CustomerId" />
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.PostalCode)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetName } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Street)
                                    </label>
                                </div>
                                <div class="form-group col-sm-3">
                                    @Html.EditorFor(model => model.StreetNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetNumber } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.StreetNumber)
                                    </label>
                                </div>
                                <div class="col-sm-12 reg-font">@Resources.CompanyInfo</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-1">
                                    <input checked="checked" id="WithIco" name="ICO_choose" type="radio" />
                                </div>
                                <div class="form-group col-sm-7">
                                    @Html.EditorFor(model => model.Ico, new { htmlAttributes = new { @class = "form-control txt-lg", @id = "txtCompanyNumber", @placeholder = @Resources.PHCompanyNumber } })
                                    <label class="label-form" for="email" id="IcoValidation">
                                        @Html.ValidationMessageFor(model => model.Ico)
                                    </label>
                                </div>
                                <div class="form-group col-sm-4">
                                    <button type="button" id="validateBtn" class="form-btn col-sm-12"><span id="spn"></span>@Resources.Validate</button>
                                </div>
                                <div class="form-group col-sm-12">
                                    <input id="WithoutIco" name="ICO_choose" class="radio inline" type="radio" /> <span class="h4"> @Resources.DontHaveCopanyNumber</span>
                                </div>
                                <hr class="col-sm-12 transparent" />
                                <div id="companyDiv" style="display:none">
                                    <div class="form-group col-sm-12">
                                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control txt-lg", @id = "txtCompanyName", @placeholder = @Resources.PHCompanyName } })
                                        <label class="label-form" for="email">
                                            @Html.ValidationMessageFor(model => model.CompanyName)
                                        </label>
                                    </div>
                                    <div class="form-group col-sm-6">
                                        @Html.DropDownListFor(model => model.CompanyType, EnumHelper.GetSelectList(typeof(CompanyType)), new { @class = "form-control txt-lg", @id = "AccountTypeDropDown" })
                                        <label class="label-form" for="email">
                                            @Html.ValidationMessageFor(model => model.CompanyType)
                                        </label>
                                    </div>
                                    <div class="form-group col-sm-6">
                                        <input type="text" class="form-control txt-lg" id="txtCompanyPostalCode" placeholder="@Resources.PHPostalCode" />
                                        @Html.HiddenFor(model => model.CompanyPostalCode, new { @id = "hiddenCompanyPostalCode" })
                                        <input type="hidden" id="hfCustomer" name="CustomerId" />
                                        <label class="label-form" for="email">
                                            @Html.ValidationMessageFor(model => model.CompanyPostalCode)
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.CompanyStreet, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetName } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.CompanyStreet)
                                    </label>
                                </div>
                                <div class="form-group col-sm-6">
                                    @Html.EditorFor(model => model.CompanyStreetNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetNumber } })
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.CompanyStreetNumber)
                                    </label>
                                </div>
                                <div class="col-sm-12 reg-font">@Resources.BusinessArea</div>
                                <hr class="col-sm-12 transparent" />
                                <div class="form-group col-sm-12">
                                   @Html.DropDownListFor(m => m.Categories.SelectedCategories, Model.Categories.AllCategories, new { @class = "chosen-select", @multiple="true", data_placeholder = "Choose a Emailaddress...", style = "width: 100%" })
                                  
                                    <label class="label-form" for="email">
                                        @Html.ValidationMessageFor(model => model.Categories)
                                    </label>
                                </div>

                                <button type="submit" id="MyButton" class="form-btn col-sm-12">@Resources.Register2</button>
                            </form>
                            <script>
                                $('.chosen-select').chosen();
                            </script>
                                @*<script type="text/javascript">
                                    $(".chosen-select-multiple").chosen().change();
                                    $(".chosen-select-multiple").trigger('liszt:updated');
                                    $(".chosen-select-multiple").chosen({
                                        'max_selected_options': 1,
                                        'allow_single_deselect': true, // check out what happens when you remove this option
                                        'disable_search': true, // if you dont want to show search box
                                        'placeholder_text_multiple': 'Please choose something ...',
                                        'display_selected_options': false 
                                    }).removeAttr("multiple");

                                    $(".chosen-select-multiple").on("chosen:maxselected", function (evt, params) {
                                        $('.chosen-select-multiple').trigger('chosen:close');
                                    });

                                    $(".chosen-select-multiple").click(function () {
                                        $("#choose").text($(this).text());
                                        $(this).parent().hide();
                                    });
                            </script>*@
                            
                            @*<script type="text/javascript">
                                 var config = {
                                     '.chosen-select': {},
                                     '.chosen-select-deselect': { allow_single_deselect: true },
                                     '.chosen-select-no-single': { disable_search_threshold: 10 },
                                     '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                                     '.chosen-select-width': { width: "95%" }
                                 }
                                 for (var selector in config) {
                                     $(selector).chosen(config[selector]);
                                 }
                            </script>*@
                           

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
