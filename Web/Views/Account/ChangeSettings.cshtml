@model Web.eBado.Models.Account.AccountSettingsModel
@using Infrastructure.Common.Enums
@using Infrastructure.Resources

@{
    ViewBag.Title = "ChangeSettings";
}

@Styles.Render("~/Content/settings")
@Scripts.Render("~/bundles/jquery_autocomplete")
<script>
    $(document).ready(function () {

        if (localStorage.getItem("isEditMember")) {
            $('#companyProfileDiv').addClass('hidden-toggle');
            $('#editMemberDiv').removeClass('hidden-toggle');
            localStorage.removeItem("isEditMember");
        }
    });

    $(function () {
        jQuery('.accordion-toggle').on('click', function () {
            if (jQuery(this).next().is(':hidden')) {
                jQuery('.accordion-toggle').next().hide(300);
                jQuery(this).next().show(300);
            }
        });
    })
</script>
@using (Html.BeginForm("ChangeSettings", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    {
        string token = Request.Cookies["tokenCookie"]?.Value;
        if (!string.IsNullOrEmpty(token))
        {
            Request.Headers.Add("Authorization", $"Bearer {token}");
            //HttpContext.Current.Request.Headers.Add("Authorization", $"Bearer {token}");
        }
    }
    <div class="container">
        <div class="responsive push_top_10">
            @{
                var session = (Web.eBado.Models.Shared.SessionModel)Session["User"];
                var companySession = session.Companies.FirstOrDefault(c => c.IsActive);
            }
            @AccountHelper.SettingsMenu(Url, ViewContext.RouteData.Values["Action"].ToString(), session)
            <div class="tabcontent">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (session.IsActive)
                {

                    <div class="accordion-toggle push_top_5">
                        <div class="accordion-main">@Resources.ChangeAccountProfile</div>
                    </div>
                    <div class="accordion-content">
                        @if (!session.IsExternalLogin)
                        {
                            <div class="row">
                                <div class="col-sm-12 set-font">@Resources.Profile</div>
                            </div>
                            <div class="row">
                                @if (Model.UserModel.ProfileUrl == null)
                                {
                                    <div class="col-lg-6">
                                        <div class="tags_text">@Resources.DontHaveProfilePicture</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-lg-6">
                                        <img src="@Model.UserModel.ProfileUrl?@DateTime.Now.Ticks.ToString()" id="userImageId" class="profile_img">
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class=" col-lg-6">
                                    <div class="fileContainer push_top_5 push_bottom_10">
                                        <span class="glyphicon glyphicon-plus eb_blue"></span> <span id="fileNameU">@Resources.UploadProfilePicture</span>
                                        <input type="file" name="ProfilePicture" />
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.ContactDetails</div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                @Html.EditorFor(model => model.UserModel.Email, new { htmlAttributes = new { @class = "form-control txt-lg", @readonly = "readonly" } })
                                <div class="val-message"></div>
                            </div>

                            <div class="col-lg-4">
                                @Html.EditorFor(model => model.UserModel.PhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.PhoneNumber, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-lg-4">
                                @Html.EditorFor(model => model.UserModel.AdditionalPhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber.Replace("*", string.Empty) } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.AdditionalPhoneNumber, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.PHName</div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3">
                                @Html.EditorFor(model => model.UserModel.Title, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHTitle } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.Title, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-lg-4">
                                @Html.EditorFor(model => model.UserModel.FirstName, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHFirstname } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.FirstName, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-lg-5">
                                @Html.EditorFor(model => model.UserModel.Surname, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHLastName } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.Surname, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.PHAddress</div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <input type="text" class="form-control txt-lg" id="txtPostalCode" placeholder="@Resources.PHPostalCode" value="@Model.UserModel.PostalCode" />
                                @Html.HiddenFor(model => model.UserModel.PostalCode, new { @id = "hiddenPostalCode" })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.PostalCode, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-md-6">
                                @Html.EditorFor(model => model.UserModel.Street, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetName } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.Street, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-md-3">
                                @Html.EditorFor(model => model.UserModel.StreetNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetNumber } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.UserModel.StreetNumber, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>

                    </div>
                    <div class="accordion-toggle">
                        <div class="accordion-main">@Resources.ChangePassword</div>
                    </div>
                    <div class="hidden-toggle accordion-content">
                        <div class="row">
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PasswordModel.OldPassword, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHOldPassword } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.PasswordModel.OldPassword, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PasswordModel.NewPassword, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHOldPassword } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.PasswordModel.NewPassword, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.PasswordModel.RepeatNewPassword, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHNewPassword } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.PasswordModel.RepeatNewPassword, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                    </div>
                    <div class="accordion-toggle">
                        <div class="accordion-main">@Resources.ChangeAdvancedAccountSettings</div>
                    </div>
                    <div class="hidden-toggle accordion-content">
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.SearchRadius</div>
                            <div class="box_div">
                                @Html.EditorFor(model => model.SearchModel.SearchRadius, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.SearchModel.SearchRadius, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInSK</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInSK, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInCZ</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInCZ, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInHU</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInHU, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>


                    </div>
                }
                else
                {
                    string hiddenClass = "";
                    string push = "";
                    if (session.HasCompany)
                    {
                        push = "push_top_5";
                    }
                    else
                    {
                        hiddenClass = "hidden-toggle";
                    }
                    string visible = "";
                    if (session.IsContractor)
                    {
                        visible = "novisible";
                    }

                    <div class="accordion-toggle @push">
                        <div class="accordion-main">@Resources.ChangeBusinessAccountProfile</div>
                    </div>
                    <div id="companyProfileDiv" class="@hiddenClass accordion-content">
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.Profile</div>
                        </div>
                        <div class="row">
                            @if (Model.CompanyModel.ProfileUrl == null)
                            {
                                <div class="col-lg-6">
                                    <div class="tags_text">@Resources.DontHaveProfilePicture</div>
                                </div>
                            }
                            else
                            {
                                <div class="col-lg-6">
                                    <img src="@Model.CompanyModel.ProfileUrl" class="profile_img">
                                </div>
                            }
                        </div>
                        <div class="row">
                            <div class=" col-lg-6">
                                <div class="fileContainer push_top_5 push_bottom_20">
                                    <span class="glyphicon glyphicon-plus eb_blue"></span> <span id="fileNameC">@Resources.UploadProfilePicture</span>
                                    <input type="file" name="ProfilePicture" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.CompanyModel.CompanyName, new { htmlAttributes = new { @class = "form-control txt-lg", @readonly = "readonly" } })
                                <div class="val-message"></div>
                            </div>

                            <div class="col-lg-3">
                                @Html.EditorFor(model => model.CompanyModel.CompanyIco, new { htmlAttributes = new { @class = "form-control txt-lg", @readonly = "readonly" } })
                                <div class="val-message"></div>
                            </div>

                            <div class="col-lg-3">
                                @Html.EditorFor(model => model.CompanyModel.CompanyDic, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHTaxnumber, @readonly = "readonly" } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyDic, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.PHAddress2</div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <input type="text" class="form-control txt-lg" id="txtCompanyPostalCode" placeholder="@Resources.PHPostalCode" value="@Model.CompanyModel.CompanyPostalCode" />
                                @Html.HiddenFor(model => model.CompanyModel.CompanyPostalCode, new { @id = "hiddenCompanyPostalCode" })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyPostalCode, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.CompanyModel.CompanyStreet, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetName } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyStreet, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-lg-3">
                                @Html.EditorFor(model => model.CompanyModel.CompanyStreetNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHStreetNumber } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyStreetNumber, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.ContactDetails</div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CompanyModel.CompanyEmail, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHEmail } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyEmail, "", new { @class = "text-danger" })</div>
                            </div>
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CompanyModel.CompanyPhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyPhoneNumber, "", new { @class = "text-danger" })</div>
                            </div>

                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CompanyModel.CompanyAdditionalPhoneNumber, new { htmlAttributes = new { @class = "form-control txt-lg", @placeholder = @Resources.PHPhoneNumber.Replace("*", string.Empty) } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyAdditionalPhoneNumber, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.BusinessArea</div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.CompanyModel.CompanyDescription, new { htmlAttributes = new { @class = "form-control txt-lg", @rows = "6", @placeholder = @Resources.PHDescriptionOfActivities } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.CompanyModel.CompanyDescription, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="row">
                            <div id="existingCategories" class="col-lg-12 resp_push_bottom_10">
                                <div class="val-message hidden_div" id="categoryValidation"></div>
                                <div class="tags_text">@Resources.BusinessAreas</div>
                                @{ int categoryId = 1;}
                                @foreach (var category in Model.CurrentCategories)
                                {
                                    <div id="div_@categoryId" class="tags_blocks">
                                        <div id="name_@categoryId" class="tags_block-text">@category</div>
                                        <div id="@categoryId" class="category_tags_block-symbol">&#10006;</div>
                                    </div>
                                    categoryId++;
                                }
                            </div>
                        </div>
                        <div class="edit_container push_bottom_20">
                            <span class="glyphicon glyphicon-plus eb_blue"><input type="button" id="newCategoryBtn" value="@Resources.AddBusinessArea" class="btn-no-border" /></span>
                        </div>
                        <div class="edit_container">
                            <div id="categoryDiv" class="col-md-8 hidden_div">
                                <div class="row">
                                    <div class="tags_text">@Resources.AddBusinessArea</div>
                                </div>
                                <div class="row">
                                    <input type="text" class="form-control txt-lg" id="selectedCategoryInput" placeholder="@Resources.ChooseBusinessArea" />
                                    @Html.HiddenFor(model => model.CompanyModel.Categories.SelectedCategories, new { @id = "hiddenSelectedCategoryInput" })
                                    <div id="categoryArea" class="tag_area push_top_5"></div>
                                    <div class="val-message"></div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12 set-font">@Resources.Languages</div>
                        </div>
                        <div class="row">
                            <div id="existingLanguages" class="col-lg-12 resp_push_bottom_10">
                                <div class="val-message hidden_div" id="languageValidation"></div>
                                <div class="tags_text">@Resources.YourLanguages</div>
                                @{ int languageId = 1;}
                                @foreach (var language in Model.CurrentLanguages)
                                {
                                    <div id="div_@language.Code" class="tags_blocks">
                                        <div id="name_@language.Code" class="tags_block-text">(@language.Code) @language.LanguageName</div>
                                        <div id="@language.Code" class="language_tags_block-symbol">&#10006;</div>
                                    </div>
                                    languageId++;
                                }
                            </div>
                        </div>
                        <div class="edit_container push_bottom_20">
                            <span class="glyphicon glyphicon-plus eb_blue"><input type="button" id="newLanguageBtn" value="@Resources.AddAdditionalLanguages" class="btn-no-border" /></span>
                        </div>
                        <div class="edit_container">
                            <div id="languageDiv" class="col-md-8 hidden_div">
                                <div class="row">
                                    <div class="tags_text">@Resources.AddAdditionalLanguages</div>
                                </div>
                                <div class="row">
                                    <input type="text" class="form-control txt-lg" id="selectedLanguageInput" placeholder="Add your language skills" />
                                    @Html.HiddenFor(model => model.CompanyModel.Languages.SelectedLanguages, new { @id = "hiddenSelectedLanguageInput" })
                                    <div id="languageArea" class="tag_area push_top_5"></div>
                                    <div class="val-message"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="accordion-toggle">
                        <div class="accordion-main">@Resources.ChangeBusinessAccountSettings</div>
                    </div>
                    <div class="hidden-toggle accordion-content">
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.SearchRadius</div>
                            <div class="box_div">
                                @Html.EditorFor(model => model.SearchModel.SearchRadius, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="val-message">@Html.ValidationMessageFor(model => model.SearchModel.SearchRadius, "", new { @class = "text-danger" })</div>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInSK</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInSK, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInCZ</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInCZ, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>
                        <div class="settings_wrapper">
                            <div class="text_div font_16">@Resources.EnableSearchInHU</div>
                            <div class="toggle_div">
                                <label class="switch">
                                    @Html.CheckBoxFor(m => m.SearchModel.SearchInHU, new { @class = "form-control" })
                                    <span class="slider"></span>
                                </label>
                            </div>
                        </div>
                        <div class="@visible">
                            <div class="settings_wrapper">
                                <div class="text_div font_16">@Resources.EnableNotificationsForTheAccount</div>
                                <div class="toggle_div">
                                    <label class="switch">
                                        @Html.CheckBoxFor(m => m.NotificationModel.NotifyCommentOnAccount, new { @class = "form-control" })
                                        <span class="slider"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="settings_wrapper">
                                <div class="text_div font_16">@Resources.EnableNotificationsForPosts</div>
                                <div class="toggle_div">
                                    <label class="switch">
                                        @Html.CheckBoxFor(m => m.NotificationModel.NotifyCommentOnContribution, new { @class = "form-control" })
                                        <span class="slider"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="settings_wrapper">
                                <div class="text_div font_16">@Resources.SendNotificationsToAllMembers</div>
                                <div class="toggle_div">
                                    <label class="switch">
                                        @Html.CheckBoxFor(m => m.NotificationModel.NotifyAllMember, new { @class = "form-control" })
                                        <span class="slider"></span>
                                    </label>
                                </div>
                            </div>
                        </div>

                        @*TODO: PROFI UCET: pridanie vlastnej kolecie clenov ktorych budeme notifikovat*@
                        @*<div class="email_settings_wrapper">
                                <div class="email_toggle_div">
                                    <label class="switch_small">
                                        @Html.CheckBoxFor(m => m.NotificationModel.NotifyAllMember, new { @class = "form-control" })
                                        <span class="slider_small "></span>
                                    </label>
                                </div>
                                <div class="email_text_div font_14">daco@email.com</div>
                            </div>
                            <div class="email_settings_wrapper">
                                <div class="email_toggle_div">
                                    <label class="switch_small">
                                        @Html.CheckBoxFor(m => m.NotificationModel.NotifyAllMember, new { @class = "form-control" })
                                        <span class="slider_small"></span>
                                    </label>
                                </div>
                                <div class="email_text_div font_14">daco@email.com</div>
                            </div>*@

                    </div>
                    if (@companySession.CompanyPermissions.Contains(CompanyPermission.AddMember.ToString()))
                    {
                        <div class="@visible">
                            <div class="accordion-toggle">
                                <div class="accordion-main">@Resources.EditBusinessAccountMembers</div>
                            </div>

                            <div id="editMemberDiv" class="hidden-toggle accordion-content">
                                <div class="edit_container">
                                    <input type="button" id="newMemberBtn" value="@Resources.AddMember" class="form-btn-transparent" />
                                    <input type="button" id="newRoleBtn" value="@Resources.AddRole" class="form-btn-transparent" />
                                </div>
                                <div id="newMember" class="edit_container hidden_div push_top_20 push_bottom_20">
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EditMembersAndRolesModel.MemberEmail, new { htmlAttributes = new { @class = "form-control txt-lg", @id = "newMemberText", @placeholder = @Resources.UserEmail } })
                                        <div class="val-message text-danger" id="memberValidation"></div>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(m => m.EditMembersAndRolesModel.SelectedRoleId, Model.EditMembersAndRolesModel.AllRoles, new { @class = "form-control txt-lg", @id = "newMemberDrop" })
                                        <div class="val-message"></div>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="button" value="@Resources.Add" onclick="AddNewMember()" class="form-btn" />
                                    </div>
                                </div>

                                <div id="newRole" class="edit_container hidden_div push_top_20 push_bottom_20">
                                    <div class="col-md-4">
                                        @Html.EditorFor(model => model.EditMembersAndRolesModel.RoleName, new { htmlAttributes = new { @class = "form-control txt-lg", @id = "newRoleName", @placeholder = @Resources.RoleName } })
                                        <div class="val-message">@Html.ValidationMessageFor(model => model.EditMembersAndRolesModel.RoleName, "", new { @class = "text-danger" })</div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.AddAttachments, new { @class = "form-control", @id = "AddAttachments" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.AddAttachments</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.AddGallery, new { @class = "form-control", @id = "AddGallery" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.AddGallery</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.AddMember, new { @class = "form-control", @id = "AddMember" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.AddMember</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.Comment, new { @class = "form-control", @id = "Comment" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.Comment</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.CreateDemand, new { @class = "form-control", @id = "CreateDemand" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.CreateDemand</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.ChangeSettings, new { @class = "form-control", @id = "ChangeSettings" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.ChangeSettings</div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.DeleteDemand, new { @class = "form-control", @id = "DeleteDemand" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.DeleteDemand</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.EditDemand, new { @class = "form-control", @id = "EditDemand" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.EditDemand</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.RemoveAttachments, new { @class = "form-control", @id = "RemoveAttachments" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.RemoveAttachments</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.RemoveGallery, new { @class = "form-control", @id = "RemoveGallery" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.RemoveGallery</div>
                                        </div>
                                        <div class="role_settings_wrapper">
                                            <div class="role_toggle_div">
                                                <label class="switch_small">
                                                    @Html.CheckBoxFor(m => m.EditMembersAndRolesModel.Permissions.RemoveMember, new { @class = "form-control", @id = "RemoveMember" })
                                                    <span class="slider_small"></span>
                                                </label>
                                            </div>
                                            <div class="role_text_div font_14">@Resources.RemoveMember</div>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" onclick="AddNewRole()" value="@Resources.Add" class="form-btn" />
                                    </div>
                                </div>
                                <div class="member_list_text">
                                    @Resources.ListOfMembers
                                </div>
                                @if (Model.EditMembersAndRolesModel.UserRoles.Count() > 0)
                                {
                                    for (int i = 0; i < Model.EditMembersAndRolesModel.UserRoles.Count(); i++)
                                    {
                                        if (Model.EditMembersAndRolesModel.UserRoles[i].UserEmail != session.Email)
                                        {
                                            <div class="member_list_wrapper">
                                                <div id="@Model.EditMembersAndRolesModel.UserRoles[i].UserEmail" class="member_blocks member_left">
                                                    @Html.DropDownListFor(m => m.EditMembersAndRolesModel.UserRoles[i].SelectedRoleId, new SelectList(Model.EditMembersAndRolesModel.AllRoles, "Value", "Text", Model.EditMembersAndRolesModel.UserRoles[i].SelectedRoleId), new { @class = "form-control txt-lg", @id = "memberRole" + i })
                                                </div>
                                                <div class="member_blocks member_middle">
                                                    <div class="role_text_div font_16">@Model.EditMembersAndRolesModel.UserRoles[i].UserEmail</div>
                                                </div>
                                                @if (@companySession.CompanyPermissions.Contains(CompanyPermission.RemoveMember.ToString()))
                                                {
                                                    <div class="member_blocks member_right">
                                                        <input type="button" onclick="DeleteMember('@Model.EditMembersAndRolesModel.UserRoles[i].UserEmail')" value="@Resources.Delete" class="form-btn" />
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            if (Model.EditMembersAndRolesModel.UserRoles.Count() == 1)
                                            {
                                                <h4>@Resources.YouAreTheOnlyMember</h4>
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    <h4>@Resources.NoMembersAtm</h4>
                                }
                            </div>
                        </div>
                    }
                }
                <div class="accordion-content push_top_20 push_bottom_20">
                    <input type="submit" value="@Resources.Change" class="form-btn-transparent" style="width:200px" />
                </div>
            </div>
        </div>
    </div>
    <script>
        window.globalVar = @Html.Raw(Json.Encode(Model.CurrentCategories ?.Count()));

        $("[type=file]").on("change", function () {
            var file = this.files[0].name;
            if (file)
            {
                $("#fileNameU").text(file);
                $("#fileNameC").text(file);
            }
        });
    </script>
    @Scripts.Render("~/bundles/changeSettings")
    @Scripts.Render("~/bundles/postalCode")
    @Scripts.Render("~/bundles/categories")

}
